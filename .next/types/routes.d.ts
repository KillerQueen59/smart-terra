// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/dashboard" | "/device/aws" | "/device/tmas" | "/login" | "/map" | "/register" | "/sumber/awl" | "/sumber/aws"
type AppRouteHandlerRoutes = "/api/awl" | "/api/awl/tmas" | "/api/aws" | "/api/aws/laporan" | "/api/dashboard" | "/api/dashboard/device" | "/api/dashboard/kebun" | "/api/dashboard/pt" | "/api/user" | "/api/user/try"
type PageRoutes = never
type LayoutRoutes = "/" | "/login" | "/register"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/api/awl": {}
  "/api/awl/tmas": {}
  "/api/aws": {}
  "/api/aws/laporan": {}
  "/api/dashboard": {}
  "/api/dashboard/device": {}
  "/api/dashboard/kebun": {}
  "/api/dashboard/pt": {}
  "/api/user": {}
  "/api/user/try": {}
  "/dashboard": {}
  "/device/aws": {}
  "/device/tmas": {}
  "/login": {}
  "/map": {}
  "/register": {}
  "/sumber/awl": {}
  "/sumber/aws": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
  "/login": never
  "/register": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
