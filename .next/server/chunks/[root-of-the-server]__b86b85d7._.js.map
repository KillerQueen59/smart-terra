{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 61, "column": 0}, "map": {"version":3,"sources":["file:///Users/fauzanramadhan/Ojan/smart-terra/src/app/api/dashboard/kebun/route.ts"],"sourcesContent":["// app/api/dashboard/kebun/route.ts\nimport { NextResponse } from \"next/server\";\nimport { PrismaClient } from \"@prisma/client\";\n\nconst prisma = new PrismaClient();\n\nexport async function GET() {\n  try {\n    const kebuns = await prisma.kebun.findMany({\n      include: {\n        pt: true, // Include PT relationship for filtering\n      },\n      orderBy: {\n        name: \"asc\",\n      },\n    });\n\n    const formattedKebuns = kebuns.map((kebun) => ({\n      id: kebun.id,\n      name: kebun.name,\n      ptId: kebun.ptId,\n      pt: kebun.pt,\n    }));\n\n    return NextResponse.json({\n      success: true,\n      data: formattedKebuns,\n      message: `Found ${formattedKebuns.length} kebuns`,\n    });\n  } catch (error) {\n    console.error(\"Error fetching kebun data:\", error);\n    return NextResponse.json(\n      {\n        success: false,\n        message: \"Failed to fetch kebun data\",\n        error: error instanceof Error ? error.message : \"Unknown error\",\n      },\n      { status: 500 }\n    );\n  } finally {\n    await prisma.$disconnect();\n  }\n}\n"],"names":[],"mappings":"AAAA,mCAAmC;;;;;AACnC;AACA;;;AAEA,MAAM,SAAS,IAAI,6IAAY;AAExB,eAAe;IACpB,IAAI;QACF,MAAM,SAAS,MAAM,OAAO,KAAK,CAAC,QAAQ,CAAC;YACzC,SAAS;gBACP,IAAI;YACN;YACA,SAAS;gBACP,MAAM;YACR;QACF;QAEA,MAAM,kBAAkB,OAAO,GAAG,CAAC,CAAC,QAAU,CAAC;gBAC7C,IAAI,MAAM,EAAE;gBACZ,MAAM,MAAM,IAAI;gBAChB,MAAM,MAAM,IAAI;gBAChB,IAAI,MAAM,EAAE;YACd,CAAC;QAED,OAAO,gJAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,MAAM;YACN,SAAS,CAAC,MAAM,EAAE,gBAAgB,MAAM,CAAC,OAAO,CAAC;QACnD;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,8BAA8B;QAC5C,OAAO,gJAAY,CAAC,IAAI,CACtB;YACE,SAAS;YACT,SAAS;YACT,OAAO,iBAAiB,QAAQ,MAAM,OAAO,GAAG;QAClD,GACA;YAAE,QAAQ;QAAI;IAElB,SAAU;QACR,MAAM,OAAO,WAAW;IAC1B;AACF","debugId":null}}]
}